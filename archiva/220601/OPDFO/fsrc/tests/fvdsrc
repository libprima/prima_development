#!/bin/bash
# This script pre-processes the Fortran source code for classic flang 7.0.1, Huawei Bisheng flang
# 1.3.3, NVIDIA nvfortran 22.3, and AOCC 3.2.0 flang, which raise a false positive error of
# out-bound subscripts when invoked with the -Mbounds flag.
# See https://github.com/flang-compiler/flang/issues/1238

DIR="$(realpath "$1")"
LINALG="$DIR/common/linalg.F90"
LINGEO="$DIR/lincoa/geometry.f90"

if ! basename "$DIR" | grep -q ".test\|test." || ! [[ -d "$DIR" ]] ; then
    printf "\n%s is not a testing directory.\n\nExit.\n\n" "$DIR"
    exit 1
fi

if [[ -f "$LINALG" ]] ; then
    OLDSTR="x(i) = (b(i) - inprod(A(i, 1:i - 1), x(1:i - 1))) / A(i, i)"
    NEWSTR="x(1) = b(1) / A(1, 1); if (i > 1) x(i) = (b(i) - inprod(A(i, 1:i - 1), x(1:i - 1))) / A(i, i)"
    sed -i "s|$OLDSTR|$NEWSTR|g" "$LINALG"
    OLDSTR="x(i) = (b(i) - inprod(A(i, i + 1:n), x(i + 1:n))) / A(i, i)"
    NEWSTR="x(n) = b(n) / A(n, n); if (i < n) x(i) = (b(i) - inprod(A(i, i + 1:n), x(i + 1:n))) / A(i, i)"
    sed -i "s|$OLDSTR|$NEWSTR|g" "$LINALG"
    OLDSTR="x(i) = (b(i) - inprod(R(i, i + 1:n), x(i + 1:n))) / R(i, i)"
    NEWSTR="x(n) = b(n) / R(n, n); if (i < n) x(i) = (b(i) - inprod(R(i, i + 1:n), x(i + 1:n))) / R(i, i)"
    sed -i "s|$OLDSTR|$NEWSTR|g" "$LINALG"
fi

if [[ -f "$LINGEO" ]] ; then
    OLDSTR="pglag = matprod(qfac(:, nact + 1:n), matprod(glag, qfac(:, nact + 1:n)))"
    NEWSTR="if (nact < n) pglag = matprod(qfac(:, nact + 1:n), matprod(glag, qfac(:, nact + 1:n)))"
    sed -i "s|$OLDSTR|$NEWSTR|g" "$LINGEO"
fi

exit 0
